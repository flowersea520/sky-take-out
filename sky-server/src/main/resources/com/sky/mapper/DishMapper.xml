<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.DishMapper">

<!--     将实体类中的属性值，赋值给数据库字段属性，即可
useGeneratedKeys="true":
当设置为true时，这个属性告诉MyBatis在插入数据后获取数据库生成的键值。这通常用于主键字段，如自动递增的ID。
keyProperty="id": 这指定了将数据库生成的键值设置到哪个Java对象的属性中。
在这个例子中，它是设置到Java对象dish的id属性中。（因为这个形参是Dish dish）
-->

<!--  将insert语句执行完之后，产生的主键值赋值给实体类Dish的id属性；。-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into dish (name, category_id, price, image, description, create_time, update_time, create_user,update_user, status)
        values (#{name}, #{categoryId}, #{price}, #{image}, #{description}, #{createTime}, #{updateTime}, #{createUser}, #{updateUser}, #{status})
    </insert>
<!--  修改菜品基本信息和对应口味信息 -->
    <update id="update">
        update dish
        <!-- 注意：这里用动态sql -->
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="categoryId != null">category_id = #{categoryId},</if>
            <if test="price != null">price = #{price},</if>
            <if test="image != null">image = #{image},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
        </set>
        where id = #{id}
    </update>
    <!--    根据菜品id集合批量删除菜品数据-->
    <delete id="deleteByIds">
        delete from dish where id in 
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <!--菜品的分页查询-->
    <select id="pageQuery" resultType="com.sky.vo.DishVO">
        <!--  注意看Datagrip控制台，先在控制台上写sql，然后复制到这里-->
        select d.*, c.name as categoryName from dish d left outer join category c on d.category_id = c.id
        <where>
            <if test="name != null">
                and d.name like concat('%',#{name}, '%')
            </if>
            <if test="categoryId != null">
        <!-- 将传过来的DTO中的CategoryId， #{} 预编译sql：这种语法用于插入或绑定一个变量值到SQL语句中。
         将实体类DTO中的categoryId插入到sql语句中-->
                and d.category_id = #{categoryId}
            </if>
            <if test="status != null">
                and d.status = #{status}
            </if>
        </where>
<!-- 根据菜品的创建时间，降序来排，这样可以保证最新创建的数据在最上面 -->
        order by d.create_time desc
    </select>

<!--    /**
	 * 根据分类id查询菜品
	 * @param dish
	 * @return
	 */
-->
    <select id="getByCategoryId" resultType="com.sky.entity.Dish">
        select * from dish
        <where>
            <if test="name != null">
                and name = #{name}
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
            <if test="status != null" >
                and status = #{status}
            </if>

        </where>
        order by create_time desc
    </select>


</mapper>